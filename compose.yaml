services:
  postgresql:
    image: docker.io/bitnami/postgresql
    container_name: postgresql
    ports:
      - '5432:5432'
    volumes:
      # To init DB on the first run
      # - ./initdb/db.sql.gz:/docker-entrypoint-initdb.d/init.sql.gz:ro
      - 'postgresql_data:/bitnami/postgresql'
    environment:
      # Password for the postgres superuser. If not set there no ability to login with postgres user.
      # - POSTGRESQL_POSTGRES_PASSWORD=vOMw277HBPWofPwjH0fYs0oQ
      # Create a database and restricted user with access to it on the first run
      - POSTGRESQL_USERNAME=dbuser
      - POSTGRESQL_PASSWORD=ztV9v4vjS3PpbP+L
      - POSTGRESQL_DATABASE=dashboard
    networks:
      - data
    restart: always

  web:
    build:
      context: .
      dockerfile: Dockerfile_dashboard
      # target: builder
    stop_signal: SIGINT
    networks:
      - proxy
      - data
    ports:
      - '8000:8000'
    # command: ["python", "app.py"]
    # volumes:
    #   - .:/app:ro
    depends_on:
      - postgresql
    labels:
      traefik.enable: "true"
      traefik.http.routers.web.rule: "Host(`insights.autotrading.ua`)"
      traefik.http.routers.web.tls: "true"
      traefik.http.routers.web.tls.certresolver: "letsEncrypt"
    restart: always

  dataloader:
    build:
      context: .
      dockerfile: Dockerfile_cronjob
      # target: builder
    stop_signal: SIGINT
    networks:
      - data
    depends_on:
      - postgresql
    restart: always

volumes:
  postgresql_data:
    driver: local

networks:
  proxy:
    external: true
  data: